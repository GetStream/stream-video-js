name: Deploy Sample Apps

on:
  push:
    branches:
      - main
      - demo-apps
    paths:
      - '.github/workflows/deploy-sample-apps.yml'
      - 'sample-apps/react/**'
      - 'packages/client/**'
      - 'packages/angular-sdk/**'
      - 'packages/react-sdk/**'
      - 'packages/react-bindings/**'
      - 'packages/styling/**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build-and-deploy-react-messenger-clone:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_REACT_MESSENGER_CLONE }}
      VITE_STREAM_KEY: ${{ vars.STREAM_API_KEY_SAMPLE_APPS }}
      VITE_VIDEO_API_KEY: ${{ vars.STREAM_API_KEY_SAMPLE_APPS }}
      VITE_VIDEO_COORDINATOR_WS_URL: 'wss://wss-video-coordinator.oregon-v1.stream-io-video.com/rpc/stream.video.coordinator.client_v1_rpc.Websocket/Connect'
      VITE_VIDEO_COORDINATOR_RPC_ENDPOINT: 'https://rpc-video-coordinator.oregon-v1.stream-io-video.com/rpc'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build packages
        run: NODE_ENV=production yarn build:react:deps

      - name: Test packages
        run: yarn test:ci:all

      ### Vercel deployment (Preview) ###
      - name: Vercel Pull Configuration (Preview)
        if: ${{ github.ref_name != 'main' }}
        run: yarn vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Build (Preview)
        if: ${{ github.ref_name != 'main' }}
        run: yarn vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deploy (Preview)
        if: ${{ github.ref_name != 'main' }}
        run: yarn vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      ### Vercel deployment (Production) ###
      - name: Vercel Pull Configuration (Production)
        if: ${{ github.ref_name == 'main' }}
        run: yarn vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Build (Production)
        if: ${{ github.ref_name == 'main' }}
        run: yarn vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deploy (Production)
        if: ${{ github.ref_name == 'main' }}
        run: yarn vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  build-and-deploy-angular-sample-apps:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      STREAM_API_KEY: ${{ vars.STREAM_API_KEY_SAMPLE_APPS }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build packages
        run: NODE_ENV=production yarn build:angular:deps

      - name: Test packages
        run: yarn test:ci:all

      ### Vercel deployment (Preview) ###
      - name: Vercel Pull Configuration (Preview)
        if: ${{ github.ref_name != 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_ZOOM_CLONE }}
        run: yarn vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Build (Preview)
        if: ${{ github.ref_name != 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_ZOOM_CLONE }}
        run: yarn vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deploy (Preview)
        if: ${{ github.ref_name != 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_ZOOM_CLONE }}
        run: yarn vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      ### Vercel deployment (Production) ###
      - name: Vercel Pull Configuration (Production)
        if: ${{ github.ref_name == 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_ZOOM_CLONE }}
        run: yarn vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Build (Production)
        if: ${{ github.ref_name == 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_ZOOM_CLONE }}
        run: yarn vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deploy (Production)
        if: ${{ github.ref_name == 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_ZOOM_CLONE }}
        run: yarn vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      ### Vercel deployment (Preview) ###
      - name: Vercel Pull Configuration (Preview)
        if: ${{ github.ref_name != 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_MESSENGER_CLONE }}
        run: yarn vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Build (Preview)
        if: ${{ github.ref_name != 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_MESSENGER_CLONE }}
        run: yarn vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deploy (Preview)
        if: ${{ github.ref_name != 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_MESSENGER_CLONE }}
        run: yarn vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      ### Vercel deployment (Production) ###
      - name: Vercel Pull Configuration (Production)
        if: ${{ github.ref_name == 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_MESSENGER_CLONE }}
        run: yarn vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Build (Production)
        if: ${{ github.ref_name == 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_MESSENGER_CLONE }}
        run: yarn vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deploy (Production)
        if: ${{ github.ref_name == 'main' }}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ANGULAR_MESSENGER_CLONE }}
        run: yarn vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
