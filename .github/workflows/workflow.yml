name: Test and release
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on: [push]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: ESLint Cache
        uses: actions/cache@v3
        with:
          path: "./.eslintcache"
          key: ${{ runner.os }}-eslintcache-${{ github.ref_name }}-${{ hashFiles('.eslintcache') }}

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Lint Packages
        run: yarn lint:ci:all

      - name: Build packages
        run: yarn build:all

      - name: Test packages
        run: yarn test:ci:all

      - name: Release packages
        run: echo 'TODO'

      ### Vercel deployment (Preview) ###
      - name: Vercel Pull Configuration (Preview)
        if: ${{ github.ref_name != 'main' }}
        run: yarn vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Build (Preview)
        if: ${{ github.ref_name != 'main' }}
        run: yarn vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deploy (Preview)
        if: ${{ github.ref_name != 'main' }}
        run: yarn vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      ### Vercel deployment (Production) ###
      - name: Vercel Pull Configuration (Production)
        if: ${{ github.ref_name == 'main' }}
        run: yarn vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Build (Production)
        if: ${{ github.ref_name == 'main' }}
        run: yarn vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deploy (Production)
        if: ${{ github.ref_name == 'main' }}
        run: yarn vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
