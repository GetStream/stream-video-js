name: React Native Dogfood Release

on:
  push:
    paths:
      - 'packages/react-native-dogfood/**'
    branches:
      - main

concurrency:
  group: react-native-release
  cancel-in-progress: true

jobs:
  deploy_ios:
    name: Deploy iOS to Testflight
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install Ruby and Gems
        uses: ruby/setup-ruby@v1
        with:
          working-directory: packages/react-native-dogfood
          bundler-cache: true
      - name: Install Yarn dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            yarn install --frozen-lockfile;
      - name: Build packages
        env:
          STREAM_COORDINATOR_RPC_URL: https://rpc-video-coordinator.oregon-v1.stream-io-video.com/rpc/
          STREAM_COORDINATOR_WS_URL: ws://wss-video-coordinator.oregon-v1.stream-io-video.com:8989/rpc/stream.video.coordinator.client_v1_rpc.Websocket/Connect
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          STREAM_API_KEY: ${{ secrets.STREAM_API_KEY }}
          STREAM_SECRET_KEY: ${{ secrets.STREAM_SECRET_KEY }}
        run: yarn build:all
      - name: Cache pods
        uses: actions/cache@v2
        with:
          path: packages/react-native-dogfood/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('packages/react-native-dogfood/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: iOS pods setup
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: |
            cd packages/react-native-dogfood/ios;
            bundle exec pod install;
      - name: Build and deploy
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
        run: |
          cd packages/react-native-dogfood;
          bundle exec fastlane ios deploy_to_testflight_qa;

  deploy_android:
    name: Deploy Android to Firebase App Distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Install Ruby and Gems
        uses: ruby/setup-ruby@v1
        with:
          working-directory: packages/react-native-dogfood
          bundler-cache: true
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          check-latest: true
      - name: Install Yarn dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: |
            cd packages/react-native-dogfood;
            yarn install --frozen-lockfile;
      - name: Build packages
        env:
          STREAM_COORDINATOR_RPC_URL: https://rpc-video-coordinator.oregon-v1.stream-io-video.com/rpc/
          STREAM_COORDINATOR_WS_URL: ws://wss-video-coordinator.oregon-v1.stream-io-video.com:8989/rpc/stream.video.coordinator.client_v1_rpc.Websocket/Connect
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          STREAM_API_KEY: ${{ secrets.STREAM_API_KEY }}
          STREAM_SECRET_KEY: ${{ secrets.STREAM_SECRET_KEY }}
        run: yarn build:all
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('packages/react-native-dogfood/*.gradle*', 'packages/react-native-dogfood/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build and deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_APP_DISTRIBUTION_TOKEN }}
        run: |
          cd packages/react-native-dogfood;
          bundle exec fastlane android deploy_to_firebase;
