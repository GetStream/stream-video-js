name: React Native Dogfood Release
env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_APP_DISTRIBUTION_TOKEN }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
  APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
  APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
  APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
  SENTRY_RN_AUTH_TOKEN: ${{ secrets.SENTRY_RN_AUTH_TOKEN }}
  STREAM_API_KEY: ${{ vars.STREAM_DOGFOOD_API_KEY }}
  STREAM_API_SECRET: ${{ secrets.STREAM_DOGFOOD_API_SECRET }}
  STREAM_SDK_TEST_APP: ${{ secrets.STREAM_SDK_TEST_APP }}
  STREAM_SDK_TEST_ACCOUNT_EMAIL: ${{ secrets.STREAM_SDK_TEST_ACCOUNT_EMAIL }}
  STREAM_SDK_TEST_ACCOUNT_PASSWORD: ${{ secrets.STREAM_SDK_TEST_ACCOUNT_PASSWORD }}
  STREAM_SDK_TEST_ACCOUNT_OTP_SECRET: ${{ secrets.STREAM_SDK_TEST_ACCOUNT_OTP_SECRET }}

on:
  push:
    paths:
      - '.github/workflows/react-native-workflow.yml'
      - 'sample-apps/react-native/dogfood/**'
      - 'packages/client/**'
      - 'packages/react-bindings/**'
      - 'packages/react-native-sdk/**'

concurrency:
  group: react-native-workflow-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy_ios:
    name: Build iOS and Deploy-${{ github.ref == 'refs/heads/main' }}
    timeout-minutes: 60
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: ESLint Cache
        uses: actions/cache@v3
        with:
          path: './.eslintcache'
          key: ${{ runner.os }}-eslintcache-${{ github.ref_name }}-${{ hashFiles('.eslintcache') }}
      - name: Install Yarn Dependencies
        run: yarn install --immutable
      - name: Build react native dependency packages
        run: yarn build:react-native:deps
      - name: Test RN SDK
        run: yarn test:react-native:sdk
      - name: Install Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.8
          cache: 'pip'
      - name: Install Ruby and Gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.5'
          working-directory: sample-apps/react-native/dogfood
          bundler-cache: true
      - name: Cache pods
        uses: actions/cache@v3
        with:
          path: sample-apps/react-native/dogfood/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('sample-apps/react-native/dogfood/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: iOS pods setup
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: |
            cd sample-apps/react-native/dogfood/ios;
            bundle exec pod install;
          on_retry_command: |
            cd sample-apps/react-native/dogfood/ios;
            pod update hermes-engine --no-repo-update;  # Due this error https://github.com/facebook/react-native/issues/36945#issuecomment-1556230597
      - name: Install Maestro
        run: |
          brew install facebook/fb/idb-companion
          pip install fb-idb
          MAESTRO_VERSION=${{ vars.MAESTRO_VERSION }} curl -Ls 'https://get.maestro.mobile.dev' | bash
      - name: Install Video Buddy
        run: npm install -g "https://github.com/GetStream/stream-video-buddy#${{ vars.STREAM_VIDEO_BUDDY_VERSION }}"
      - name: Test
        working-directory: sample-apps/react-native/dogfood
        run: bundle exec fastlane test_e2e
        timeout-minutes: 60
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Test Data
          path: |
            **/fastlane/recordings
            **/fastlane/video-buddy-log.txt
      - name: Build and optionally deploy
        working-directory: sample-apps/react-native/dogfood
        run: bundle exec fastlane build_ios deploy:${{ github.ref == 'refs/heads/main' }};

  deploy_android:
    name: Build Android and Deploy-${{ github.ref == 'refs/heads/main' }}
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: ESLint Cache
        uses: actions/cache@v3
        with:
          path: './.eslintcache'
          key: ${{ runner.os }}-eslintcache-${{ github.ref_name }}-${{ hashFiles('.eslintcache') }}
      - name: Install Yarn Dependencies
        run: yarn install --immutable
      - name: Build react native dependency packages
        run: yarn build:react-native:deps
      - name: Test RN SDK
        run: yarn test:react-native:sdk
      - name: Install Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.8
          cache: 'pip'
      - name: Install Ruby and Gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.5'
          working-directory: sample-apps/react-native/dogfood
          bundler-cache: true
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          check-latest: true
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('sample-apps/react-native/dogfood/*.gradle*', 'sample-apps/react-native/dogfood/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Install Maestro
        run: MAESTRO_VERSION=${{ vars.MAESTRO_VERSION }} curl -Ls 'https://get.maestro.mobile.dev' | bash
      - name: Install Video Buddy
        run: npm install -g "https://github.com/GetStream/stream-video-buddy#${{ vars.STREAM_VIDEO_BUDDY_VERSION }}"
      - name: Build, test and optionally deploy
        working-directory: sample-apps/react-native/dogfood
        env:
          ANDROID_BUILD_TOOLS_VERSION: '33.0.2'
        run: |
          echo "$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH
          bundle exec fastlane install_android_sdk
          bundle exec fastlane create_android_emulator
          bundle exec fastlane start_android_emulator
          bundle exec fastlane build_android deploy:${{ github.ref == 'refs/heads/main' }};
        timeout-minutes: 60
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Test Data
          path: |
            **/fastlane/recordings
            **/fastlane/video-buddy-log.txt
